/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c EvinceWindow -p EvinceWindow.h:EvinceWindow.cpp org.gnome.evince.Window.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef EVINCEWINDOW_H_1335820976
#define EVINCEWINDOW_H_1335820976

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.gnome.evince.Window
 */
class EvinceWindow: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.gnome.evince.Window"; }

public:
    EvinceWindow(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~EvinceWindow();

public Q_SLOTS: // METHODS
    // HAND-EDIT: change source_point type to QPoint
    inline QDBusPendingReply<> SyncView(const QString &source_file, const QPoint &source_point, uint timestamp)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(source_file) << QVariant::fromValue(source_point) << QVariant::fromValue(timestamp);
        return asyncCallWithArgumentList(QLatin1String("SyncView"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void Closed();
    void DocumentLoaded(const QString &uri);
    // HAND_EDIT: change source_point type to QPoint
    void SyncSource(const QString &source_file, const QPoint &source_point, uint timestamp);
};

namespace org {
  namespace gnome {
    namespace evince {
      typedef ::EvinceWindow Window;
    }
  }
}
#endif
