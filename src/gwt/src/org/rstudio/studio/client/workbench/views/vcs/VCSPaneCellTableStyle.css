@eval fixedWidthFont org.rstudio.core.client.theme.ThemeFonts.getFixedWidthFont();


@def selectionBorderWidth 2px;


span.status {
   white-space: nowrap;
}
span.status img:first-child {
   margin-right: 6px;
}

.cellTableWidget {
   font-size: 9pt;
}

.cellTableFirstColumn {
   font-family: fixedWidthFont;
}

.cellTableLastColumn {

}

.cellTableFooter {
 /* CHANGE: more conservative/elegant style */
  border-top: 1px solid #BBB;
  padding: 3px 4px;
  text-align: left;
  overflow: hidden;
  cursor: default;
}

.cellTableHeader {
  border-bottom: 1px solid #d6dadc;
  border-right: 1px solid #d6dadc;
  border-top: 1px solid white;
  border-left: 1px solid white;
  padding: 1px 2px;
  text-align: left;
  font-weight: normal;
  font-size: 11px;
  color: #3c474d;
  background-color: #eeeff1;
  overflow: hidden;
  cursor: default;
}

.cellTableCell {
  /* CHANGE: use less padding (originally was 15px) */
  padding: 2px 4px;
  overflow: hidden;

  /* CHANGE: use default cursor rather than pointer/caret */
  cursor: default;

}

.cellTableCell:first-child {
   padding: 0 4px;
}

.cellTableCell input[type=checkbox] {
   margin-top: 0;
   margin-bottom: 0;
}


.cellTableFirstColumnFooter {

}

.cellTableFirstColumnHeader {

}

.cellTableLastColumnFooter {

}

.cellTableLastColumnHeader {

}

.cellTableSortableHeader {
  cursor: pointer;
  cursor: hand;
}

.cellTableSortableHeader:hover {
  color: #6c6b6b;
}

.cellTableSortedHeaderAscending {

}

.cellTableSortedHeaderDescending {

}

.cellTableEvenRow {
  /*background: #ffffff;*/
}

.cellTableEvenRowCell {
  border: selectionBorderWidth solid #ffffff;
}

.cellTableOddRow {
  /*background-color: #eef4fb;*/
}

.cellTableOddRowCell {
  /*border: selectionBorderWidth solid #eef4fb;*/
  border: selectionBorderWidth solid #ffffff;
}

.cellTableHoveredRow {
  /* CHANGE: Disable hover effects */
  /* background: #eee; */
}

.cellTableHoveredRowCell {
  /* CHANGE: Disable hover effects */
  /* border: selectionBorderWidth solid #eee; */
}


.cellTableKeyboardSelectedRow {
  background: #ffc;
}

.cellTableKeyboardSelectedRowCell {
  border: selectionBorderWidth solid #ffc;
}

.cellTableSelectedRow {
  /* CHANGE: use same selected background color as History table */
  background: rgb(146, 193, 240);
  /* color: white; */
  height: auto;
  overflow: auto;
}

.cellTableSelectedRowCell {
  /* CHANGE: use same selected background color as History table */
  border: selectionBorderWidth solid rgb(146, 193, 240);
}

/**
 * The keyboard selected cell is visible over selection.
 */
.cellTableKeyboardSelectedCell {
  border: selectionBorderWidth solid transparent;
}

.cellTableLoading {
  margin: 30px;
}

