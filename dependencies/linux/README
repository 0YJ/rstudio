
Component Version Requirements
=============================================================================

RStudio requires relatively recent versions of a number of components. It is
therefore likely to only correctly configure and build on more recent Linux
systems. Specific version requirements for various components include:

- R 2.11.1
- CMake 2.6
- Pango 1.14
- Boost 1.42
- Qt 4.7 [Required only for Desktop]


Desktop vs. Server Builds
=============================================================================

The dependencies described below are for RStudio desktop and server. If you 
only want to build the server then Qt is not required. In this case you can
invoke the install-dependencies scripts with a --server-only flag, e.g.

./install-dependencies-debian --server-only


Installing Dependencies for Debian/Ubuntu, Fedora, RedHat/CentOS, or OpenSUSE
=============================================================================

1) R installation - building RStudio requires that a version of R be 
previously installed within a location where the R executable can be run from
the system shell (e.g. /usr/bin or /usr/local/bin). Building R from source
and then executing 'make install' will conform to this requirement as will
installing it using the system standard package management tools (apt-get, 
yum, etc).

2) Run the install-dependencies script appropriate to your platform's
package management system (for server-only builds be sure to include the
--server-only flag as described above):

   ./install-dependencies-debian  
   ./install-dependencies-yum
   ./install-dependencies-zypper
   
The versions of Boost (1.42) and Qt (4.7) required by RStudio are
relatively recent. If you install these components using your system
package manager then the following minimum OS versions are required:

   - Debian 6
   - Ubuntu 10.10
   - Fedora 14
   - OpenSUSE 11.4

Note that Debian 6 includes only Qt 4.6 so the Desktop version won't build
with just the system Qt libraries. To build Desktop on Debian 6 (or other
older systems) see the instructions below.
   
If you aren't building on one of these more recent system versions then
you can satisfy the Boost and/or Qt version requirements by installing
them using the scripts in dependencies/linux/older (described below).


Installing Dependencies for Other Systems
=============================================================================

If the system you are installing on is either older than the minimum required
versions listed above or another Linux distribution entirely, then you should
do the following to make sure you have fulfilled all dependencies:

1) Using the install-dependencies-* scripts referenced above as a guide,
ensure that all of the referenced libraries are available on your system.

2) Install the Goolge Web Toolkit (GWT) dependency using the following script:

   dependencies
      common
         install-gwt

3) If your system doesn't meet the minimum version requirements for Boost (1.44)
and/or Qt (4.7) then install them using the scripts provided here:

   dependencies
     linux
       older
         install-boost
         install-qt-sdk
         
Notes on using these scripts:

QT: The Qt installation prompts for confirmation of the install location
and approval of the Qt license. When installing the Qt SDK you should
accept the default installation path of /opt/qtsdk-<version>. This 
ensures that RStudio will use the sdk in preference to any version of
Qt installed in /usr/lib.

BOOST: The Boost libraries are not built if the directory 
/usr/local/include/boost already exists.

4) If your system doesn't meet the minimum version requirements for CMake (2.6)
you can download a Linux binary of the latest version of CMake here:

  - http://www.cmake.org/cmake/resources/software.html
